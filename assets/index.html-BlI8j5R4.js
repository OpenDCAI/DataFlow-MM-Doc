import{_ as t,c as o,b as a,o as r}from"./app-DupbsFQ8.js";const n={};function i(d,e){return r(),o("div",null,e[0]||(e[0]=[a('<h2 id="new-operator" tabindex="-1"><a class="header-anchor" href="#new-operator"><span>New Operator</span></a></h2><p>DataFlow operators share a unified base class <code>OperatorABC</code>, located under <code>dataflow/operators/generate</code>, <code>dataflow/operators/filter</code> or <code>dataflow/operators/refine</code>. These operators must implement the fixed method <code>run()</code> required by the base class.</p><p>If you want to add a new operator to DataFlow, after implementing the operator and its constituent methods, you must perform the following steps:</p><ol><li>In the operator’s directory, add a file that contains the operator class.</li><li>In that file, import the <code>Registry</code> instance and decorate the class with the <code>register()</code> decorator.</li><li>In the <code>__init__.py</code> file of the operator’s directory, add the operator’s relative path to the <code>_import_structure</code> variable.</li></ol><p>If it is necessary to add a new operator directory, you must also make the corresponding modifications in <code>dataflow/utils/registry.py</code>.</p>',5)]))}const c=t(n,[["render",i]]),l=JSON.parse('{"path":"/en/dev_guide/new_algo/","title":"New Operator","lang":"en-US","frontmatter":{"title":"New Operator","createTime":"2025/06/12 12:00:00","permalink":"/en/dev_guide/new_algo/"},"readingTime":{"minutes":0.45,"words":134},"git":{"createdTime":1759373811000,"updatedTime":1759373811000,"contributors":[{"name":"Sunnyhaze","username":"Sunnyhaze","email":"mxch1122@126.com","commits":1,"avatar":"https://avatars.githubusercontent.com/Sunnyhaze?v=4","url":"https://github.com/Sunnyhaze"}]},"filePathRelative":"en/notes/dev_guide/new_algo.md","headers":[]}');export{c as comp,l as data};
